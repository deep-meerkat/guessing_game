// включение библиотеки, не входящей в прелюдие стандартной библиотеки
use std::io;

fn main() {
    // функции со знаком ! - макросы
    println!("Guess the number");

    println!("Please input your guess.");

    // создание переменной (по-умолчанию все переменные неизменяемы)
    // добавляем модификатор mut (переменная становится изменяемой)
    // String::new() - возвращает новый экземпляр типа String
    // ::new указывает, что new является ассоциированной функцией типа String
    // Ассоциированная функция - это функция, реализованная для типа
    // new в данном контексте создает новую пустую строку
    // new - функция, назначение которой создать новое значение какого-либо типа.
    let mut guess = String::new();

    // stdin возвращает экземпляр std::io:Stdin, который является типом, предоставляющим
    // дескриптор стандартного ввода для вашего терминала.
    io::stdin()
        // метод read_line вызывается на дескрипторе стандартного ввода для получения
        // ввода пользователя.
        // в качестве агрумента передаем переменную, которая должна быть изменяема
        // символ & указывает, что аргумент является ссылкой
        // ссылки по-умолчанию также не изменяемы, поэтому чтобы сделать ее изменяемой
        // нужно указать &mut guess, а не &guess
        // read_line возвращает Result - это enum, вариантами которого являются объекты 
        // состояния выполнения операции, например Ok, Err        
        .read_line(&mut guess)
        // Если значение Result == Err, тогда следующий метод выведет данную строку на экран
        // без этого метода программа выполнится, но покажет предупреждения, что не все
        // исключения учтены
        .expect("Failed to read line");
    // Фигурные скобки являются заполнителем для переменной
    println!("My {guess} You guessed: {}", guess);
}
